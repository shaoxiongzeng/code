C++：

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int pre = 0, maxa = nums[0];
        int n=nums.size();
        for (int i=0;i<n;i++) {                 
            pre = max(pre + nums[i], nums[i]);      //若前面所加小于该地址值，舍弃前部分
            maxa = max(maxa, pre);                
        }
        return maxa;
    }
};

Python：

class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        for i in range(1,len(nums)):
            nums[i] = max(nums[i-1]+nums[i],nums[i])        //将数组当前位置值改成当前最大子序和
        return max(nums)




