class Solution {
public:
    int strStr(string haystack, string needle) {
     if(needle[0]==0)
        return 0;
        int l1=haystack.size();
        int l2=needle.size();
        if(l1<l2)
        return -1;
       return (needle.empty()) ? 0 : haystack.find(needle);
    }
};


class Solution {
public:
    int strStr(string haystack, string needle) {
        int l1=haystack.size();
        int l2=needle.size();
        int i=0;
        while(i<=l1-l2+1){      //确保从i开始能截取长度为l2的字符串
            string s=haystack.substr(i,l2); //从主串中截取长度为l2的字符串，与needle直接比较
            if(s.compare(needle)!=0)
            ++i;
            else return i;
        }return -1;
    }
};